// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#include <iostream>
using namespace std;
typedef bool (*filterFunc)(int);

bool getEven(int a) {
    return (a%2) == 0;
}

int calc_fibonacci(int limit, filterFunc filter) {
    int sum = 0;
    int lastTerm = 0;
    int thisTerm = 1;
    while (true) {
        int current = thisTerm + lastTerm;
        if (current > limit)
            break;

        if (filter(current))
            sum += current;
            
        lastTerm = thisTerm;
        thisTerm = current;
    }
    return sum;
}

int main() {
    int limit = 4e6;
    filterFunc filter = &getEven;
    int sum = calc_fibonacci(limit, filter);
    cout << "sum of all even terms of fibonacci to " << limit << " is " << sum << endl;
    return 0;
}